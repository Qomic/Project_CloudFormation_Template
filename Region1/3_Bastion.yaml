AWSTemplateFormatVersion: 2010-09-09
Description: Bastion Host template


Parameters:
  ExportStackName:
    Description: The name of the stack that exports the values
    Type: String

  KeyName:
    Type: "AWS::EC2::KeyPair::KeyName"
    Description: Select KeyPair

  BastionAMIID:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/canonical/ubuntu/server/18.04/stable/20210224/amd64/hvm/ebs-gp2/ami-id 





Resources:

###########
# Bastion
##########

  BastionInstance:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref KeyName
      InstanceType: t2.micro
      ImageId: !Ref BastionAMIID
      SubnetId: 
        Fn::ImportValue: !Sub '${ExportStackName}-PublicSubnet1'
      SecurityGroupIds:
        - !Ref BastionSecurityGroup
      IamInstanceProfile: !Ref InstanceProfile
      Tags:
        - Key: Name
          Value: Bastion Host
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt update
          apt install -y awscli
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          apt install unzip 
          unzip awscliv2.zip
          sudo ./aws/install

          apt install -y mysql-client

          cat >> root_query.sql << EOF
          create database care_db;
          create user careadmin identified by 'hackers';
          grant all on care_db.* to careadmin@'localhost' identified by 'hackers';
          grant all on care_db.* to careadmin@'%' identified by 'hackers';
          grant all privileges on care_db.* to 'careadmin'@'localhost' identified by 'hackers';
          grant all privileges on care_db.* to 'careadmin'@'%' identified by 'hackers';
          flush privileges;
          EOF

          cat >> member.sql << EOF
           create table member ( 
           num int unsigned not null auto_increment, 
           id varchar(50) not null, 
           pass varchar(50) not null, 
           name varchar(50), 
           nick varchar(50), 
           mphone varchar(20), 
           email varchar(50), 
           regist_day varchar(30), 
           primary key(num,id) 
           );
          EOF

          cat >> greet.sql << EOF
            create table greet (
            num int unsigned not null auto_increment,
            id varchar(15),
            nick varchar(10),
            subject varchar(255) not null,
            content text,
            regist_day varchar(20),
            hit int unsigned,
            file_name varchar(255),
            primary key(num)
            );
          EOF


          dbaddr=`aws cloudformation describe-stacks --query 'Stacks[].Outputs[?OutputKey==\`RDSEndPointAddress\`].OutputValue' --output=text --region=ap-northeast-2`


          mysql -uadmin -p123456789 -h$dbaddr < root_query.sql
          mysql -uadmin -p123456789 -h$dbaddr care_db < member.sql
          mysql -uadmin -p123456789 -h$dbaddr care_db < greet.sql

############
# Bastion SG
############

  BastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: Bastion
      GroupDescription: Open Port 22 for ssh
      VpcId:
        Fn::ImportValue: !Sub '${ExportStackName}-LabVPC'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: Bastion


###########
# IAM Role for Instance
###########

  KrBastionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: KrBastionEc2FullAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 'ec2:*'
                Resource: '*'
              - Effect: Allow
                Action: 'cloudformation:ListExports'
                Resource: '*'
              - Effect: Allow
                Action: 'cloudformation:DescribeStacks'
                Resource: '*'
              - Effect: Allow
                Action: 'rds:*'
                Resource: '*'


###########
# Instance Profile
###########

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles: [!Ref KrBastionRole]
      InstanceProfileName: KrBastionRole



Outputs:
  BastionPublicDns:
    Value: !GetAtt BastionInstance.PublicDnsName
    Description: Bastion Dns Name
    Export:
      Name: !Sub ${AWS::StackName}-BastionPublicDns

  BastionId:
    Value: !Ref BastionInstance
    Description: Bastion Instance Id
    Export:
      Name: !Sub ${AWS::StackName}-BastionId