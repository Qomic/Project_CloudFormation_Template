AWSTemplateFormatVersion: 2010-09-09
Description: Test template


Parameters:

  KeyName:
    Type: "AWS::EC2::KeyPair::KeyName"
    Description: Select KeyPair

  UbuntuAMIID:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/canonical/ubuntu/server/18.04/stable/20210224/amd64/hvm/ebs-gp2/ami-id 

Resources:

###########
# Web Instance
##########

  WebInstance:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref KeyName
      InstanceType: t2.micro
      ImageId: !Ref UbuntuAMIID
      SecurityGroupIds:
        - !Ref WebSecurityGroup
      IamInstanceProfile: !Ref WebInstanceProfile
      Tags:
        - Key: Name
          Value: Web Instance
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt update       
          apt install -y awscli
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          apt install unzip  
          unzip awscliv2.zip
          sudo ./aws/install

          aws cloudformation create-stack --stack-name myVPC --template-url https://drtemplate.s3.ap-northeast-2.amazonaws.com/Region1/1_VPC.yaml --parameters ParameterKey=LabVpcCidr,ParameterValue=10.5.0.0/16 ParameterKey=PublicSubnet1Cidr,ParameterValue=10.5.10.0/24 ParameterKey=PublicSubnet2Cidr,ParameterValue=10.5.30.0/24 ParameterKey=PrivateSubnet1Cidr,ParameterValue=10.5.20.0/24 ParameterKey=PrivateSubnet2Cidr,ParameterValue=10.5.40.0/24  --region ap-northeast-2


          aws cloudformation wait stack-create-complete --stack-name myVPC --region ap-northeast-2

          
          aws cloudformation create-stack --stack-name myRDS --template-url https://drtemplate.s3.ap-northeast-2.amazonaws.com/Region1/2_RDS_template.yaml --parameters ParameterKey=ExportStackName,ParameterValue=myVPC ParameterKey=DBUsername,ParameterValue=admin ParameterKey=DBPassword,ParameterValue=123456789 ParameterKey=DBInstanceIdentifier,ParameterValue=dbinstance-ap-northeast-2 --region ap-northeast-2

          aws cloudformation wait stack-create-complete --stack-name myRDS --region ap-northeast-2

          aws cloudformation create-stack --stack-name myBastion --template-url https://drtemplate.s3.ap-northeast-2.amazonaws.com/Region1/3_Bastion.yaml --parameters ParameterKey=ExportStackName,ParameterValue=myVPC ParameterKey=KeyName,ParameterValue=test0422_bastion ParameterKey=BastionAMIID,ParameterValue=/aws/service/canonical/ubuntu/server/18.04/stable/20210224/amd64/hvm/ebs-gp2/ami-id --region ap-northeast-2 --capabilities CAPABILITY_NAMED_IAM

          aws cloudformation wait stack-create-complete --stack-name myBastion --region ap-northeast-2


          KrBastionId=`aws cloudformation describe-stacks --query 'Stacks[].Outputs[?OutputKey==\`BasionId\`].OutputValue' --output=text --region=ap-northeast-3`
          aws ec2 wait instance-status-ok --instance-ids $KrBastionId


          aws cloudformation create-stack --stack-name myAS --template-url https://drtemplate.s3.ap-northeast-2.amazonaws.com/Region1/4.AS_v2.yaml --parameters ParameterKey=ExportStackName,ParameterValue=myVPC --region ap-northeast-2 --capabilities CAPABILITY_NAMED_IAM
 
          aws cloudformation wait stack-create-complete --stack-name myAS --region ap-northeast-2







          aws cloudformation create-stack --stack-name myVPC --template-url https://drtemplate.s3.ap-northeast-2.amazonaws.com/Region2/1_VPC.yaml --parameters ParameterKey=LabVpcCidr,ParameterValue=192.168.0.0/16 ParameterKey=PublicSubnet1Cidr,ParameterValue=192.168.10.0/24 ParameterKey=PublicSubnet2Cidr,ParameterValue=192.168.30.0/24 ParameterKey=PrivateSubnet1Cidr,ParameterValue=192.168.20.0/24 ParameterKey=PrivateSubnet2Cidr,ParameterValue=192.168.40.0/24  --region ap-northeast-3

          aws cloudformation wait stack-create-complete --stack-name myVPC --region ap-northeast-3


          aws cloudformation create-stack --stack-name myBastion --template-url https://drtemplate.s3.ap-northeast-2.amazonaws.com/Region2/2_Bastion.yaml --parameters ParameterKey=ExportStackName,ParameterValue=myVPC ParameterKey=KeyName,ParameterValue=jpBastion ParameterKey=BastionAMIID,ParameterValue=ami-092faff259afb9a26 --region ap-northeast-3 --capabilities CAPABILITY_NAMED_IAM

          aws cloudformation wait stack-create-complete --stack-name myBastion --region ap-northeast-3

          JpBastionId=`aws cloudformation describe-stacks --query 'Stacks[].Outputs[?OutputKey==\`BasionId\`].OutputValue' --output=text --region=ap-northeast-3`
          aws ec2 wait instance-status-ok --instance-ids $JpBastionId

          aws cloudformation create-stack --stack-name myDB --template-url https://drtemplate.s3.ap-northeast-2.amazonaws.com/Region2/3_DB_Server.yaml --parameters ParameterKey=ExportStackName,ParameterValue=myVPC ParameterKey=KeyName,ParameterValue=jpBastion ParameterKey=DbAMIID,ParameterValue=ami-092faff259afb9a26 --region ap-northeast-3 --capabilities CAPABILITY_NAMED_IAM



          aws cloudformation wait stack-create-complete --stack-name myDB --region ap-northeast-3

          DBId=`aws cloudformation describe-stacks --query 'Stacks[].Outputs[?OutputKey==\`DBId\`].OutputValue' --output=text --region=ap-northeast-3`

          aws ec2 wait instance-status-ok --instance-ids $DBId --region=ap-northeast-3

          aws cloudformation create-stack --stack-name myAS --template-url https://drtemplate.s3.ap-northeast-2.amazonaws.com/Region2/4.AS_v2.yaml --parameters ParameterKey=ExportStackName,ParameterValue=myVPC --region ap-northeast-3 --capabilities CAPABILITY_NAMED_IAM

          aws cloudformation wait stack-create-complete --stack-name myAS --region ap-northeast-3


          KrALBDns=`aws cloudformation describe-stacks --query 'Stacks[].Outputs[?OutputKey==\`ALBDns\`].OutputValue' --output=text --region=ap-northeast-2`
          KrALBHz=`aws cloudformation describe-stacks --query 'Stacks[].Outputs[?OutputKey==\`ALBHz\`].OutputValue' --output=text --region=ap-northeast-2`
          JpALBDns=`aws cloudformation describe-stacks --query 'Stacks[].Outputs[?OutputKey==\`ALBDns\`].OutputValue' --output=text --region=ap-northeast-3`
          JpALBHz=`aws cloudformation describe-stacks --query 'Stacks[].Outputs[?OutputKey==\`ALBHz\`].OutputValue' --output=text --region=ap-northeast-3`
          HzId=`aws route53 list-hosted-zones-by-name --dns-name "suyeonshoes.click." --query HostedZones[].Id --output=text`

          aws cloudformation create-stack --stack-name route53 --template-url https://drtemplate.s3.ap-northeast-2.amazonaws.com/Route53.yaml --parameters ParameterKey=ExportStackName,ParameterValue=myAS ParameterKey=KrALBDns,ParameterValue=$KrALBDns ParameterKey=KrALBHz,ParameterValue=$KrALBHz ParameterKey=JpALBDns,ParameterValue=$JpALBDns ParameterKey=JpALBHz,ParameterValue=$JpALBHz ParameterKey=HzId,ParameterValue=$HzId --region ap-northeast-2 




          accepterVpcId=`aws cloudformation describe-stacks --query 'Stacks[].Outputs[?OutputKey==\`LabVPC\`].OutputValue' --output=text --region=ap-northeast-2`
          krVpcCidr=`aws ec2 describe-vpcs  --filters "Name=tag:Name,Values=Lab VPC" --query 'Vpcs[].CidrBlock[]' --region=ap-northeast-2 --output=text`
          jpVpcCidr=`aws ec2 describe-vpcs  --filters "Name=tag:Name,Values=Lab VPC" --query 'Vpcs[].CidrBlock[]' --region=ap-northeast-3 --output=text`


          aws cloudformation create-stack --stack-name myPeering --template-url https://drtemplate.s3.ap-northeast-2.amazonaws.com/Region2/5_VPC_Peering.yaml --parameters ParameterKey=ExportStackName,ParameterValue=myVPC ParameterKey=PeerVpcId,ParameterValue=$accepterVpcId ParameterKey=PeerRegion,ParameterValue=ap-northeast-2 --region ap-northeast-3


          aws cloudformation wait stack-create-complete --stack-name myPeering --region ap-northeast-3

          PeerId=`aws cloudformation describe-stacks --query 'Stacks[].Outputs[?OutputKey==\`PeeringId\`].OutputValue' --output=text --region=ap-northeast-3`


          aws cloudformation create-stack --stack-name jpRtEdit --template-url https://drtemplate.s3.ap-northeast-2.amazonaws.com/Region2/6_RT_Edit_jp.yaml --parameters ParameterKey=ExportStackName,ParameterValue=myVPC ParameterKey=krVPCCidr,ParameterValue=$krVpcCidr ParameterKey=Peering,ParameterValue=$PeerId --region ap-northeast-3

          aws cloudformation create-stack --stack-name krRtEdit --template-url https://drtemplate.s3.ap-northeast-2.amazonaws.com/Region1/5_RT_Edit_kr.yaml --parameters ParameterKey=ExportStackName,ParameterValue=myVPC ParameterKey=jpVPCCidr,ParameterValue=$jpVpcCidr ParameterKey=Peering,ParameterValue=$PeerId --region ap-northeast-2



############
# Web Server SG
############

  WebSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: WebSGsss
      GroupDescription: Open Port 22 , 80 for ssh
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: WebSGsss


###########
# IAM Role for Instance
###########

  Ec2WebRolesss:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: FullAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 'rds:*'
                Resource: '*'
              - Effect: Allow
                Action: 'ec2:*'
                Resource: '*'
              - Effect: Allow
                Action: 's3:*'
                Resource: '*'
              - Effect: Allow
                Action: 'cloudformation:*'
                Resource: '*'
              - Effect: Allow
                Action: 'ssm:*'
                Resource: '*'
              - Effect: Allow
                Action: 'elasticloadbalancing:*'
                Resource: '*'
              - Effect: Allow
                Action: 'iam:*'
                Resource: '*'
              - Effect: Allow
                Action: 'autoscaling:*'
                Resource: '*'
              - Effect: Allow
                Action: 'route53:*'
                Resource: '*'

###########
# Instance Profile
###########

  WebInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles: [!Ref Ec2WebRolesss]
      InstanceProfileName: Ec2WebRolesss




